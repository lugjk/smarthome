{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport Graph1Room1 from \"../screens/Graph1Room1\";\nimport Graph2Room1 from \"../screens/Graph2Room1\";\nimport Graph3Room1 from \"../screens/Graph3Room1\";\nimport Graph4Room1 from \"../screens/Graph4Room1\";\nimport Graph5Room1 from \"../screens/Graph5Room1\";\nimport Graph6Room1 from \"../screens/Graph6Room1\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\nimport TabSettingScreen from \"../screens/TabSettingScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === \"dark\" ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Root\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Menu\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: \"Oops!\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Graph1Room1\",\n      component: Graph1Room1,\n      options: {\n        title: \"Graph1\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Graph2Room1\",\n      component: Graph2Room1,\n      options: {\n        title: \"Graph2\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Graph3Room1\",\n      component: Graph3Room1,\n      options: {\n        title: \"Graph3\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Graph4Room1\",\n      component: Graph4Room1,\n      options: {\n        title: \"Graph4\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Graph5Room1\",\n      component: Graph5Room1,\n      options: {\n        title: \"Graph5\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Graph6Room1\",\n      component: Graph6Room1,\n      options: {\n        title: \"Graph6\"\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: \"modal\"\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabHome\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabHome\",\n      component: TabHomeScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: \"Home\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"home\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Modal\");\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabSetting\",\n      component: TabSettingScreen,\n      options: {\n        title: \"Setting\",\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"gear\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["D:/Study in University/Third Year/Thực tập đồ án/App/smarthome/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","Graph1Room1","Graph2Room1","Graph3Room1","Graph4Room1","Graph5Room1","Graph6Room1","LoginScreen","ModalScreen","NotFoundScreen","TabHomeScreen","TabSettingScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","headerShown","BottomTabNavigator","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":";;;;;;AAKA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SACEC,mBADF,EAEEC,YAFF,EAGEC,SAHF,QAIO,0BAJP;AAKA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAGA,OAAOC,MAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP;AAMA,OAAOC,oBAAP;;;AAEA,eAAe,SAASC,UAAT,OAIZ;AAAA,MAHDC,WAGC,QAHDA,WAGC;AACD,SACE,KAAC,mBAAD;AACE,IAAA,OAAO,EAAEF,oBADX;AAEE,IAAA,KAAK,EAAEE,WAAW,KAAK,MAAhB,GAAyBlB,SAAzB,GAAqCD,YAF9C;AAAA,cAIE,KAAC,aAAD;AAJF,IADF;AAQD;AAMD,IAAMoB,KAAK,GAAGlB,0BAA0B,EAAxC;;AAEA,SAASmB,aAAT,GAAyB;AACvB,SACE,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA,eACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAET,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEU,QAAAA,WAAW,EAAE;AAAf;AAHX,MADF,EAME,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEC,kBAFb;AAGE,MAAA,OAAO,EAAE;AAAED,QAAAA,WAAW,EAAE;AAAf;AAHX,MANF,EAWE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEC,kBAFb;AAGE,MAAA,OAAO,EAAE;AAAED,QAAAA,WAAW,EAAE;AAAf;AAHX,MAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAER,cAFb;AAGE,MAAA,OAAO,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT;AAHX,MAhBF,EAqBE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAElB,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT;AAHX,MArBF,EA0BE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAEjB,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT;AAHX,MA1BF,EA+BE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAEhB,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAT;AAHX,MA/BF,EAoCE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAEf,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEe,QAAAA,KAAK,EAAE;AAAT;AAHX,MApCF,EAyCE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAEd,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEc,QAAAA,KAAK,EAAE;AAAT;AAHX,MAzCF,EA8CE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAEb,WAFb;AAGE,MAAA,OAAO,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT;AAHX,MA9CF,EAmDE,KAAC,KAAD,CAAO,KAAP;AAAa,MAAA,aAAa,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAA5B;AAAA,gBACE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEZ;AAAtC;AADF,MAnDF;AAAA,IADF;AAyDD;;AAMD,IAAMa,SAAS,GAAG5B,wBAAwB,EAA1C;;AAEA,SAASyB,kBAAT,GAA8B;AAC5B,MAAMJ,WAAW,GAAGd,cAAc,EAAlC;AAEA,SACE,MAAC,SAAD,CAAW,SAAX;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,aAAa,EAAE;AACbsB,MAAAA,qBAAqB,EAAEvB,MAAM,CAACe,WAAD,CAAN,CAAoBS;AAD9B,KAFjB;AAAA,eAME,KAAC,SAAD,CAAW,MAAX;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,SAAS,EAAEb,aAFb;AAGE,MAAA,OAAO,EAAE;AAAA,YAAGc,UAAH,SAAGA,UAAH;AAAA,eAAoD;AAC3DL,UAAAA,KAAK,EAAE,MADoD;AAG3DM,UAAAA,UAAU,EAAE;AAAA,gBAAGC,KAAH,SAAGA,KAAH;AAAA,mBAAe,KAAC,UAAD;AAAY,cAAA,IAAI,EAAC,MAAjB;AAAwB,cAAA,KAAK,EAAEA;AAA/B,cAAf;AAAA,WAH+C;AAI3DC,UAAAA,WAAW,EAAE;AAAA,mBACX,KAAC,SAAD;AACE,cAAA,OAAO,EAAE;AAAA,uBAAMH,UAAU,CAACI,QAAX,CAAoB,OAApB,CAAN;AAAA,eADX;AAEE,cAAA,KAAK,EAAE;AAAA,oBAAGC,OAAH,SAAGA,OAAH;AAAA,uBAAkB;AACvBC,kBAAAA,OAAO,EAAED,OAAO,GAAG,GAAH,GAAS;AADF,iBAAlB;AAAA,eAFT;AAAA,wBAME,KAAC,WAAD;AACE,gBAAA,IAAI,EAAC,aADP;AAEE,gBAAA,IAAI,EAAE,EAFR;AAGE,gBAAA,KAAK,EAAE9B,MAAM,CAACe,WAAD,CAAN,CAAoBiB,IAH7B;AAIE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,WAAW,EAAE;AAAf;AAJT;AANF,cADW;AAAA;AAJ8C,SAApD;AAAA;AAHX,MANF,EA8BE,KAAC,SAAD,CAAW,MAAX;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,SAAS,EAAErB,gBAFb;AAGE,MAAA,OAAO,EAAE;AACPQ,QAAAA,KAAK,EAAE,SADA;AAEPM,QAAAA,UAAU,EAAE;AAAA,cAAGC,KAAH,SAAGA,KAAH;AAAA,iBAAe,KAAC,UAAD;AAAY,YAAA,IAAI,EAAC,MAAjB;AAAwB,YAAA,KAAK,EAAEA;AAA/B,YAAf;AAAA;AAFL;AAHX,MA9BF;AAAA,IADF;AAyCD;;AAKD,SAASO,UAAT,CAAoBC,KAApB,EAGG;AACD,SAAO,KAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,CAAC;AAAjB;AAA9B,KAAwDD,KAAxD,EAAP;AACD","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  NavigationContainer,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport * as React from \"react\";\r\nimport { ColorSchemeName, Pressable } from \"react-native\";\r\n\r\nimport Colors from \"../constants/Colors\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport Graph1Room1 from \"../screens/Graph1Room1\";\r\n\r\nimport Graph2Room1 from \"../screens/Graph2Room1\";\r\nimport Graph3Room1 from \"../screens/Graph3Room1\";\r\nimport Graph4Room1 from \"../screens/Graph4Room1\";\r\nimport Graph5Room1 from \"../screens/Graph5Room1\";\r\nimport Graph6Room1 from \"../screens/Graph6Room1\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport ModalScreen from \"../screens/ModalScreen\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport TabSettingScreen from \"../screens/TabSettingScreen\";\r\nimport {\r\n  RootStackParamList,\r\n  RootTabParamList,\r\n  RootTabScreenProps,\r\n} from \"../types\";\r\nimport LinkingConfiguration from \"./LinkingConfiguration\";\r\n\r\nexport default function Navigation({\r\n  colorScheme,\r\n}: {\r\n  colorScheme: ColorSchemeName;\r\n}) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\r\n    >\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"Root\">\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={LoginScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Root\"\r\n        component={BottomTabNavigator}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Menu\"\r\n        component={BottomTabNavigator}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"NotFound\"\r\n        component={NotFoundScreen}\r\n        options={{ title: \"Oops!\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Graph1Room1\"\r\n        component={Graph1Room1}\r\n        options={{ title: \"Graph1\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Graph2Room1\"\r\n        component={Graph2Room1}\r\n        options={{ title: \"Graph2\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Graph3Room1\"\r\n        component={Graph3Room1}\r\n        options={{ title: \"Graph3\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Graph4Room1\"\r\n        component={Graph4Room1}\r\n        options={{ title: \"Graph4\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Graph5Room1\"\r\n        component={Graph5Room1}\r\n        options={{ title: \"Graph5\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Graph6Room1\"\r\n        component={Graph6Room1}\r\n        options={{ title: \"Graph6\" }}\r\n      />\r\n      <Stack.Group screenOptions={{ presentation: \"modal\" }}>\r\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"TabHome\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"TabHome\"\r\n        component={TabHomeScreen}\r\n        options={({ navigation }: RootTabScreenProps<\"TabHome\">) => ({\r\n          title: \"Home\",\r\n\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} />,\r\n          headerRight: () => (\r\n            <Pressable\r\n              onPress={() => navigation.navigate(\"Modal\")}\r\n              style={({ pressed }) => ({\r\n                opacity: pressed ? 0.5 : 1,\r\n              })}\r\n            >\r\n              <FontAwesome\r\n                name=\"info-circle\"\r\n                size={25}\r\n                color={Colors[colorScheme].text}\r\n                style={{ marginRight: 15 }}\r\n              />\r\n            </Pressable>\r\n          ),\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabSetting\"\r\n        component={TabSettingScreen}\r\n        options={{\r\n          title: \"Setting\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"gear\" color={color} />,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}