{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Graph1Room1 = function Graph1Room1() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataGraph = _useState6[0],\n      setDataGraph = _useState6[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var getData = function getData() {\n    fetch(\"https://io.adafruit.com/api/v2/Frost984/feeds/group-project.bbc-switch/data\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setData(data);\n      console.log(data);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Time spending\"\n    }), _jsx(LineChart, {\n      data: {\n        labels: [\"0\", \"6\", \"12\", \"18\", \"24\"],\n        datasets: [{\n          data: [0, 1, 2, 3, 4]\n        }]\n      },\n      width: Dimensions.get(\"window\").width - 16,\n      height: 220,\n      yAxisLabel: \"used\",\n      chartConfig: {\n        backgroundColor: \"#1cc910\",\n        backgroundGradientFrom: \"#eff3ff\",\n        backgroundGradientTo: \"#efefef\",\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 255;\n          return \"rgba(0, 0, 0, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        }\n      },\n      bezier: true,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    }), _jsx(View, {\n      style: styles.containerbutton,\n      children: _jsx(Switch, {\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        },\n        thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: isEnabled\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    padding: 10\n  },\n  header: {\n    textAlign: \"center\",\n    fontSize: 18,\n    padding: 16,\n    marginTop: 16\n  },\n  containerbutton: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Graph1Room1;","map":{"version":3,"sources":["D:/Study in University/Third Year/Thực tập đồ án/App/smarthome/screens/Graph1Room1.tsx"],"names":["React","useEffect","useState","LineChart","Graph1Room1","isEnabled","setIsEnabled","data","setData","dataGraph","setDataGraph","toggleSwitch","previousState","getData","fetch","then","res","json","console","log","catch","error","styles","header","labels","datasets","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","containerbutton","false","true","StyleSheet","create","container","flex","justifyContent","alignItems","textAlign","padding","fontSize","marginTop"],"mappings":"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","sourcesContent":["// 7 Type of Graph using React Native Chart Kit\r\n// https://aboutreact.com/react-native-chart-kit/\r\n\r\n// import React in our code\r\nimport { List } from \"native-base\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// import all the components we are going to use\r\nimport {\r\n  SafeAreaView,\r\n  Switch,\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\n//import React Native chart Kit for different kind of Chart\r\nimport { LineChart } from \"react-native-chart-kit\";\r\n\r\nconst Graph1Room1 = () => {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataGraph, setDataGraph] = useState([]);\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\r\n\r\n  const getData = () => {\r\n    fetch(\"https://io.adafruit.com/api/v2/Frost984/feeds/group-project.bbc-switch/data\").then(\r\n      res => res.json()\r\n    ).then(\r\n      data => {setData(data); console.log(data)}\r\n    ).catch((error) => console.error(error))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  },[])\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"/switch/data\").then(\r\n  //     res => res.json()\r\n  //   ).then(\r\n  //     data => {\r\n  //       setData(data)\r\n  //       console.log(data)\r\n  //     }\r\n  //   )\r\n\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"/switch/processdata\").then(\r\n  //     res => res.json()\r\n  //   ).then(\r\n  //     data => {\r\n  //       setDataGraph(data)\r\n  //     }\r\n  //   )\r\n\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      <Text style={styles.header}>Time spending</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: [\"0\", \"6\", \"12\", \"18\", \"24\"],\r\n          datasets: [\r\n            {\r\n              data: [0, 1, 2, 3, 4],\r\n            },\r\n          ],\r\n        }}\r\n        width={Dimensions.get(\"window\").width - 16} // from react-native\r\n        height={220}\r\n        yAxisLabel={\"used\"}\r\n        chartConfig={{\r\n          backgroundColor: \"#1cc910\",\r\n          backgroundGradientFrom: \"#eff3ff\",\r\n          backgroundGradientTo: \"#efefef\",\r\n          decimalPlaces: 2, // optional, defaults to 2dp\r\n          color: (opacity = 255) => `rgba(0, 0, 0, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n          },\r\n        }}\r\n        bezier\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16,\r\n        }}\r\n      />\r\n      <View style={styles.containerbutton}>\r\n        <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={toggleSwitch}\r\n          value={isEnabled}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n    padding: 16,\r\n    marginTop: 16,\r\n  },\r\n  containerbutton: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\nexport default Graph1Room1;\r\n"]},"metadata":{},"sourceType":"module"}